<?xml version="1.0" encoding="UTF-8"?>
<glyph name="harkleanAsteriscus-syriac" format="2">
  <advance width="832"/>
  <unicode hex="070D"/>
  <note>
U070d
</note>
  <outline>
    <contour>
      <point x="231" y="224" type="line"/>
      <point x="416" y="409" type="line"/>
      <point x="601" y="224" type="line"/>
      <point x="647" y="270" type="line"/>
      <point x="462" y="455" type="line"/>
      <point x="647" y="640" type="line"/>
      <point x="601" y="686" type="line"/>
      <point x="416" y="501" type="line"/>
      <point x="231" y="686" type="line"/>
      <point x="185" y="640" type="line"/>
      <point x="370" y="455" type="line"/>
      <point x="185" y="270" type="line"/>
    </contour>
    <contour>
      <point x="393" y="271" type="curve" smooth="yes"/>
      <point x="410" y="254"/>
      <point x="428" y="254"/>
      <point x="445" y="271" type="curve" smooth="yes"/>
      <point x="454" y="280"/>
      <point x="458" y="288"/>
      <point x="458" y="297" type="curve" smooth="yes"/>
      <point x="458" y="314"/>
      <point x="436" y="336"/>
      <point x="419" y="336" type="curve" smooth="yes"/>
      <point x="410" y="336"/>
      <point x="402" y="332"/>
      <point x="393" y="323" type="curve" smooth="yes"/>
      <point x="376" y="306"/>
      <point x="376" y="288"/>
    </contour>
    <contour>
      <point x="232" y="435" type="curve" smooth="yes"/>
      <point x="249" y="418"/>
      <point x="267" y="418"/>
      <point x="284" y="435" type="curve" smooth="yes"/>
      <point x="301" y="452"/>
      <point x="301" y="470"/>
      <point x="284" y="487" type="curve" smooth="yes"/>
      <point x="267" y="504"/>
      <point x="250" y="504"/>
      <point x="232" y="487" type="curve" smooth="yes"/>
      <point x="215" y="470"/>
      <point x="215" y="452"/>
    </contour>
    <contour>
      <point x="553" y="430" type="curve" smooth="yes"/>
      <point x="570" y="413"/>
      <point x="587" y="414"/>
      <point x="604" y="431" type="curve" smooth="yes"/>
      <point x="613" y="440"/>
      <point x="617" y="448"/>
      <point x="617" y="457" type="curve" smooth="yes"/>
      <point x="617" y="474"/>
      <point x="596" y="495"/>
      <point x="579" y="495" type="curve" smooth="yes"/>
      <point x="570" y="495"/>
      <point x="562" y="491"/>
      <point x="553" y="482" type="curve" smooth="yes"/>
      <point x="536" y="465"/>
      <point x="536" y="447"/>
    </contour>
    <contour>
      <point x="387" y="596" type="curve" smooth="yes"/>
      <point x="404" y="579"/>
      <point x="422" y="579"/>
      <point x="439" y="596" type="curve" smooth="yes"/>
      <point x="448" y="605"/>
      <point x="452" y="613"/>
      <point x="452" y="622" type="curve" smooth="yes"/>
      <point x="452" y="639"/>
      <point x="431" y="660"/>
      <point x="414" y="660" type="curve" smooth="yes"/>
      <point x="405" y="660"/>
      <point x="397" y="656"/>
      <point x="388" y="647" type="curve" smooth="yes"/>
      <point x="371" y="630"/>
      <point x="370" y="613"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 143 values pushed */
1 53 53 64 54 22 48 44 42 40 38 36 34 30 24 17 13 11 6 2 51 46 44 40 38 36 34 33 32 28 27 26 22 20 13 9 4 2 30 29 30 27 27 28 26 31 12 23 23 24 22 22 23 33 33 22 24 23 24 32 25 12 29 29 30 28 28 29 33 32 33 30 30 31 29 22 12 26 26 27 25 25 26 27 26 27 24 24 25 23 28 12 32 32 33 31 31 32 30 29 30 27 27 28 26 31 9 33 33 22 24 23 24 25 32 32 25 33 32 33 30 30 31 29 22 9 27 26 27 24 24 25 28 23 23 28 31 29 25 23 1 26 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
26 53
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
53 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:38:38 +0000</string>
    </dict>
  </lib>
</glyph>
