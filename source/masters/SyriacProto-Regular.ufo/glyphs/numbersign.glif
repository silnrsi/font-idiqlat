<?xml version="1.0" encoding="UTF-8"?>
<glyph name="numbersign" format="2">
  <advance width="1090"/>
  <unicode hex="0023"/>
  <note>
numbersign
</note>
  <outline>
    <contour>
      <point x="373" y="48" type="line"/>
      <point x="502" y="48" type="line"/>
      <point x="546" y="269" type="line"/>
      <point x="672" y="269" type="line"/>
      <point x="629" y="48" type="line"/>
      <point x="755" y="48" type="line"/>
      <point x="800" y="269" type="line"/>
      <point x="963" y="269" type="line"/>
      <point x="963" y="394" type="line"/>
      <point x="825" y="394" type="line"/>
      <point x="859" y="561" type="line"/>
      <point x="963" y="561" type="line"/>
      <point x="963" y="686" type="line"/>
      <point x="885" y="686" type="line"/>
      <point x="930" y="907" type="line"/>
      <point x="799" y="907" type="line"/>
      <point x="755" y="686" type="line"/>
      <point x="630" y="686" type="line"/>
      <point x="675" y="907" type="line"/>
      <point x="548" y="907" type="line"/>
      <point x="503" y="686" type="line"/>
      <point x="341" y="686" type="line"/>
      <point x="341" y="561" type="line"/>
      <point x="477" y="561" type="line"/>
      <point x="443" y="394" type="line"/>
      <point x="341" y="394" type="line"/>
      <point x="341" y="269" type="line"/>
      <point x="418" y="269" type="line"/>
    </contour>
    <contour>
      <point x="571" y="394" type="line"/>
      <point x="605" y="561" type="line"/>
      <point x="730" y="561" type="line"/>
      <point x="697" y="394" type="line"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 172 values pushed */
1 32 32 64 33 0 30 28 26 22 21 18 17 12 8 7 4 3 26 26 27 25 24 25 22 1 0 1 21 20 21 2 12 2 3 15 14 15 12 12 13 11 10 11 8 16 16 17 7 7 16 31 30 31 28 28 29 19 18 19 3 2 3 20 10 20 21 26 26 27 25 24 25 22 1 0 1 2 2 3 21 21 2 30 30 31 29 28 29 18 18 19 5 4 5 17 16 17 6 10 6 7 15 14 15 12 12 13 11 10 11 8 16 16 17 7 7 16 14 13 10 3 9 5 27 24 23 3 0 31 30 27 26 11 5 10 8 9 8 5 4 1 5 0 29 28 25 24 13 5 12 8 23 22 19 18 15 5 14 21 20 17 3 16 7 6 3 3 2 1 9 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SLOOP[ ]	/* SetLoopVariable */
ALIGNRP[ ]	/* AlignRelativePt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
9 32
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
32 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:38:38 +0000</string>
    </dict>
  </lib>
</glyph>
