<?xml version="1.0" encoding="UTF-8"?>
<glyph name="esasaabove-syriac" format="2">
  <unicode hex="073D"/>
  <note>
U073d
</note>
  <anchor x="240" y="60" name="_class0"/>
  <outline>
    <contour>
      <point x="293" y="40" type="line"/>
      <point x="336" y="69" type="line"/>
      <point x="212" y="245" type="line"/>
      <point x="330" y="326" type="line"/>
      <point x="302" y="366" type="line"/>
      <point x="-2" y="153" type="line"/>
      <point x="26" y="113" type="line"/>
      <point x="172" y="216" type="line"/>
    </contour>
    <contour>
      <point x="150" y="0" type="curve" smooth="yes"/>
      <point x="190" y="0"/>
      <point x="224" y="34"/>
      <point x="224" y="75" type="curve" smooth="yes"/>
      <point x="224" y="114"/>
      <point x="189" y="149"/>
      <point x="150" y="149" type="curve" smooth="yes"/>
      <point x="110" y="149"/>
      <point x="75" y="115"/>
      <point x="75" y="75" type="curve" smooth="yes"/>
      <point x="75" y="34"/>
      <point x="110" y="0"/>
    </contour>
    <contour>
      <point x="150" y="38" type="curve" smooth="yes"/>
      <point x="125" y="38"/>
      <point x="112" y="50"/>
      <point x="112" y="75" type="curve" smooth="yes"/>
      <point x="112" y="100"/>
      <point x="125" y="112"/>
      <point x="150" y="112" type="curve" smooth="yes"/>
      <point x="175" y="112"/>
      <point x="187" y="100"/>
      <point x="187" y="75" type="curve" smooth="yes"/>
      <point x="187" y="50"/>
      <point x="175" y="38"/>
    </contour>
  </outline>
  <lib>
    <dict>
      <key>assembly</key>
      <string>NPUSHB[ ]	/* 78 values pushed */
1 28 28 64 29 0 2 1 7 6 4 0 4 5 11 1 1 2 0 0 1 7 6 7 0 11 4 4 5 3 3 4 2 1 2 3 9 5 4 4 5 6 7 9 7 0 5 4 4 5 1 2 9 2 3 0 7 7 0 24 6 14 20 6 8 26 8 11 17 8 3 22 5 11 1 1 4 70
SROUND[ ]	/* SuperRound */
MDAP[1]	/* MoveDirectAbsPt */
SHZ[1]	/* ShiftZoneByLastPoint */
RTG[ ]	/* RoundToGrid */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]	/* MoveIndirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
MDAP[1]	/* MoveDirectAbsPt */
ALIGNRP[ ]	/* AlignRelativePt */
MIRP[11101]	/* MoveIndirectRelPt */
SRP0[ ]	/* SetRefPoint0 */
MIRP[11101]	/* MoveIndirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
MDAP[1]	/* MoveDirectAbsPt */
MIRP[11101]	/* MoveIndirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SDPVTL[1]	/* SetDualPVectorToLine */
MDAP[0]	/* MoveDirectAbsPt */
SFVTL[0]	/* SetFVectorToLine */
MDRP[00100]	/* MoveDirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MIRP[11100]	/* MoveIndirectRelPt */
SFVTPV[ ]	/* SetFVectorToPVector */
MDRP[00100]	/* MoveDirectRelPt */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]	/* MoveDirectAbsPt */
MDAP[0]	/* MoveDirectAbsPt */
IUP[1]	/* InterpolateUntPts */
IUP[0]	/* InterpolateUntPts */
SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
PUSHW[ ]	/* 2 values pushed */
4 28
MD[0]	/* MeasureDistance */
ROUND[00]	/* Round */
SUB[ ]	/* Subtract */
PUSHB[ ]	/* 1 value pushed */
64
GT[ ]	/* GreaterThan */
IF[ ]	/* If */
SHPIX[ ]	/* ShiftZoneByPixel */
SRP1[ ]	/* SetRefPoint1 */
SHZ[1]	/* ShiftZoneByLastPoint */
PUSHW[ ]	/* 2 values pushed */
28 -64
SHPIX[ ]	/* ShiftZoneByPixel */
EIF[ ]	/* EndIf */</string>
      <key>com.schriftgestaltung.Glyphs.lastChange</key>
      <string>2025-02-10 17:37:26 +0000</string>
    </dict>
  </lib>
</glyph>
