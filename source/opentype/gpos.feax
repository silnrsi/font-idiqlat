#**********************************
#
# Copyright (c) 1994-2025 SIL Global  (https://www.sil.org)
# Released under the MIT License (https://opensource.org/licenses/MIT)
#
#**********************************

# Three features are implemented: kern, mark, and mkmk. 
#
# As best we understand it, all shapers now work per the OT spec in regard to GPOS lookup order of 
# execution, namely that lookups for all enabled features are executed in one pass in lookup order.
#
# Note that prior to around September 2024, HarfBuzz executed mark attachment in a separate
# pass after all base adjustments, but this caused compatibility issues with CoreText and Uniscribe
# (see https://github.com/harfbuzz/harfbuzz/issues/4596)

# To make sure the newer Harfbuzz doesn't cause problems we now put all base-positioning lookups 
# (kern and, if we had it, curs) before any mark positioning lookups (mark, mkmk).


#**********************************
# GPOS (Positioning) lookups
#**********************************

lookup kern_dalath_sadhe_nun { # FKern: {Dolath, Sodeh} {Nun}
    # GPOS lookup 1, type 2 (Pair adjustment)
    lookupflag RightToLeft IgnoreMarks;
    pos dalath-syriac 0 nun-syriac 150;
    pos sadhe-syriac 0 nun-syriac 250;
    pos dalath-syriac.fina 0 nun-syriac 150;
    pos sadhe-syriac.fina 0 nun-syriac 250;
} kern_dalath_sadhe_nun;

lookup  kern_nun_1 { # FKern: {Dolath, Sodeh} {Nun}
    # GPOS lookup 8, type 1 (Single adjustment)
    lookupflag RightToLeft;
    pos nun-syriac 250;
}  kern_nun_1;

lookup kern_nun2 { # FKrern: Nun in VOLT
    # GPOS lookup 4, type 8 (Chained Context positioning)
    lookupflag RightToLeft;
    pos [alaph-syriac alaph-syriac.medi alaph-syriac.fina alaph-syriac.fina.alt2 alaph-syriac.fina.alt3] @kern_below nun-syriac' lookup kern_nun_1;
} kern_nun2;

#********************
# Base positioning (kerning) 
#**********************************


feature kern {  # Kerning
    lookup kern_dalath_sadhe_nun;
    lookup kern_nun2;
} kern ;


#********************
# Mark-to-base positioning

# Attach marks last, so they get positioned correctly on glyphs that have been shifted up.

lookup LMarkOnBase {
	lookupflag 0;
	pos base @class0    mark @_class0; # top
	pos base @class1    mark @_class1; # top
	pos base @class2    mark @_class2; # below
	pos base @class3    mark @_class3; # below
} LMarkOnBase;

lookup LMarkFeminineDot {
	lookupflag 0;
	pos base @class0    mark @_class0; # below
} LMarkFeminineDot;

lookup LMarkOnLigaEast { # needs work!
	lookupflag 0;
	pos base @class1_1    mark @_class1; # top right
	pos base @class0_1    mark @_class1; # top right
	pos base @class0_2    mark @_class1; # top left
	pos base @class1_2    mark @_class1; # top left
	pos base @class3_1    mark @_class3; # bottom right
	pos base @class2_1    mark @_class2; # bottom right
	pos base @class3_2    mark @_class3; # bottom left
	pos base @class2_2    mark @_class2; # bottom left
} LMarkOnLigaEast;

lookup LAboveMarkToMark { # needs work!
	lookupflag 0;
	pos base @class0    mark @_class0; # above
	pos base @class1    mark @_class1; # above
} LAboveMarkToMark;

lookup LBelowMarkToMark { # needs work!
	lookupflag 0;
	pos base @class2    mark @_class2; # below
	pos base @class3    mark @_class3; # below
} LBelowMarkToMark;

feature mark {
	lookup LMarkOnBase;
	lookup LMarkFeminineDot;
	lookup LMarkOnLigaEast;
} mark;

feature mkmk {
	lookup LAboveMarkToMark;
	lookup LBelowMarkToMark;
} mkmk;
