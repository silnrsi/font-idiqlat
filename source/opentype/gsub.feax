#**********************************
#
# Copyright (c) 1994-2025 SIL Global (https://www.sil.org)
# Released under the MIT License (https://opensource.org/licenses/MIT)
#
#**********************************


#**********************************
#  Language Systems
#**********************************

languagesystem DFLT dflt;
languagesystem syrc dflt; # Syriac default
languagesystem latn dflt ;


@MarksAbove = [@_t.U0656 @_m.U0656 @_m.U030a_1] ; # _diaA
@MarksBelow = [@_b.U0325_3 @_b.U0331_2] ; # _diaB
@MarksAny = [@MarksAbove @MarksBelow] ;



# Notes:
#   The lookups and then the features should be arranged and grouped into ordered passes
#   as the rendering engines (esp Harfbuzz) will execute them.
#   The boundaries between passes are indicated by the comment
#       # HB PAUSE
#   in the code.


#**********************************
# GSUB (Substitution) lookups
#**********************************

#---  rtlm feature  ---

# lookup Mirror {
#   lookupflag IgnoreMarks ;
#     sub @cno_rtl by @c_rtl ;
# } Mirror ;

# HB PAUSE

#---  ccmp feature  ---




# Replace Syriac punctuation glyphs with Latin ones:

# lookup LatinPunctuation {
#  lookupflag 0 ;
#    sub @PunctSyrc by @PunctLatn ;
# } LatinPunctuation ;

# HB PAUSE

#---  fina feature  ---

lookup ltrFina {
  lookupflag IgnoreMarks ;
    sub @DualLinkIsol  by  @DualLinkFina ;
    sub @RightJoiningIsol by  @RightJoiningFina ;
} ltrFina ;

# HB PAUSE

#---  medi feature  ---

lookup ltrMedi {
  lookupflag IgnoreMarks ;
    sub @DualLinkIsol  by  @DualLinkMedi ;
} ltrMedi ;

# HB PAUSE

#---  init  feature  ---

lookup ltrInit {
  lookupflag IgnoreMarks ;
    sub @DualLinkIsol  by  @DualLinkInit ;
} ltrInit ;


# HB PAUSE

# This one answers my question on how to handle U+073C which is above and below
lookup GPreDecompose {
    sub pthahadotted-syriac by hbasaEsasadotted-syriac rwaha-syriac;
} GPreDecompose ;

# maybe rename alaph-syriac.ccmp
lookup r1 {
    sub alaph-syriac lamadh-syriac' @TypeMark' @TypeMark' by alaph-syriac.ccmp ;
    sub alaph-syriac lamadh-syriac' @TypeMark' by alaph-syriac.ccmp ;
    sub alaph-syriac lamadh-syriac'  by alaph-syriac.ccmp ;
} r1 ;

lookup r2 { # 073f not in font
    sub alaph-syriac.ccmp @TypeMark' by alaph-syriac ;
    sub alaph-syriac.ccmp yudh-syriac' by alaph-syriac ;
    sub alaph-syriac.ccmp hbasaEsasadotted-syriac' by alaph-syriac ;
    sub alaph-syriac.ccmp waw-syriac' by alaph-syriac ;
#    sub alaph-syriac.ccmp yrwaha-syriac' by alaph-syriac ;
} r2 ;

# glyph for replacement seems poorly named except 073c and 0742 are similar
lookup r3 { # 0715 0742
    sub dalath-syriac rukkakha-syriac by dalath_hbasaEsasadotted-syriac ;
    sub dalath-syriac.fina rukkakha-syriac by dalath_hbasaEsasadotted-syriac.fina ;
} r3 ;

lookup GRishSeyame { # 072A 0308
    sub rish-syriac dieresiscomb by  rish_dieresiscomb-syriac ;
    sub rish-syriac.fina dieresiscomb by  rish_dieresiscomb-syriac.fina ;
} GRishSeyame ;

# HB PAUSE

lookup ltrMediOlaph {
  lookupflag IgnoreMarks ;
    sub alaph-syriac  by  alaph-syriac.medi ;
} ltrMediOlaph ;

lookup ltrFinaSerOlaph {
  lookupflag IgnoreMarks ;
    sub alaph-syriac  by  alaph-syriac.fina.alt2 ;
} ltrFinaSerOlaph ;

lookup ltrFinaESyOlaph {
  lookupflag IgnoreMarks ;
    sub alaph-syriac  by  alaph-syriac.fina.alt3 ;
} ltrFinaESyOlaph ;


lookup LEastOptLega2 { # 072C 0710 0031
  lookupflag IgnoreMarks ;
    sub taw-syriac.fina alaph-syriac.fina.alt2 one by taw_alaph-syriac.fina ;
    sub taw-syriac.fina alaph-syriac one by taw_alaph-syriac.fina ;
    sub taw-syriac alaph-syriac one by taw_alaph-syriac ;
    sub taw-syriac alaph-syriac.fina.alt2 one by taw_alaph-syriac ;
    sub taw-syriac.fina alaph-syriac.fina.alt2 two by taw_alaph-syriac.fina.alt ;
    sub taw-syriac.fina alaph-syriac two by taw_alaph-syriac.fina.alt ;
    sub taw-syriac alaph-syriac two by taw_alaph-syriac.alt ;
} LEastOptLega2 ;

lookup LEastOptLega { # 0728 0722
  lookupflag IgnoreMarks ;
    sub sadhe-syriac nun-syriac by sadhe_nun-syriac ;
    sub sadhe-syriac.fina nun-syriac by sadhe_nun-syriac.fina ;
} LEastOptLega ;

lookup RukkakhaSquare { # 0742
   lookupflag IgnoreMarks ;
     sub @TakeRukkakhaSquare' rukkakha-syriac by rukkakha-syriac.square ;
} RukkakhaSquare ;

#---  calt feature  ---

# Language-independent shaping

# HB PAUSE

#--- remaining subs features (salt, cvxx, liga) ---

# Lookups for user-selectable features

#NB: Lookup names ending in "TT" are used only by TypeTuner

#**********************************
#  GSUB FEATURES
#**********************************

# These are intended to be arranged in the order MS & HB engines execute.

#---  rtlm feature (pass 2) ---

# feature rtlm {  # Right-To-Left Mirrored Forms
#     lookup Mirror;
# } rtlm ;

# HB PAUSE

#---  ccmp feature (pass 3) ---

feature ccmp {  # Glyph Composition/Decomposition
#    script latn;
#        lookup LatinPunctuation;
    script syrc;
        lookup GPreDecompose;
        lookup r1;
        lookup r2;
        lookup RukkakhaSquare;
} ccmp ;

# HB PAUSE

#---  locl feature (pass 3) not used ---

# HB PAUSE

#---  fina feature (pass 5) ---

feature fina {  # Terminal Forms
    script syrc;
        lookup ltrFina;
} fina ;

# HB PAUSE

#---  medi feature (pass 6) ---

feature medi {  # Medial Forms
    script syrc;
        lookup ltrMedi;
} medi ;

# HB PAUSE

#---  init feature (pass 7) ---

feature init {  # Initial Forms
    script syrc;
        lookup ltrInit;
} init ;

# HB PAUSE
# I don't know what to do with these 3 features

feature fin2 {  # Terminal Forms
    script syrc;
        lookup ltrFinaSerOlaph;
} fin2 ;

feature fin3 {  # Terminal Forms
    script syrc;
        lookup ltrFinaESyOlaph;
} fin3 ;

feature med2 {  # Medial Forms
    script syrc;
        lookup ltrMediOlaph;
} med2 ;

# HB PAUSE

#---  rlig feature (pass 8) ---



# feature rclt - nothing to do


# HB PAUSE

#---  calt feature (pass 9) not used ---

# HB PAUSE

#********************
# all remaining substitution features (dlig,salt, ssxx, liga, aalt):
#********************

#---  liga feature (pass 10) ---

feature liga {  # Ligatures  -- we use this because liga is done in the same pass as cvXX
    script syrc;
        lookup r3;
        lookup GRishSeyame;
} liga ;

# HB PAUSE
#---  dlig feature (pass 10) ---
feature dlig {  # Discretionary Ligatures not sure how to test
    # Same for latin & syriac:
        lookup LEastOptLega2;
        lookup LEastOptLega;
} dlig ;

#--- Character Variants ---



